--- linux-6.0.3/net/core/skbuff.c	2022-10-21 10:39:29.000000000 +0000
+++ linux-6.0.3_qizhe/net/core/skbuff.c	2023-03-09 06:24:02.457721954 +0000
@@ -6558,3 +6558,4 @@
 	if (unlikely(kick) && !cmpxchg(&sd->defer_ipi_scheduled, 0, 1))
 		smp_call_function_single_async(cpu, &sd->defer_csd);
 }
+EXPORT_SYMBOL(skb_attempt_defer_free);
--- linux-6.0.3/net/ipv4/af_inet.c	2022-10-21 10:39:29.000000000 +0000
+++ linux-6.0.3_qizhe/net/ipv4/af_inet.c	2023-04-05 16:24:40.543710260 +0000
@@ -1438,7 +1438,7 @@
 {
 	const struct net_offload *ops;
 	struct sk_buff *pp = NULL;
-	const struct iphdr *iph;
+	struct iphdr *iph;
 	struct sk_buff *p;
 	unsigned int hlen;
 	unsigned int off;
@@ -1454,7 +1454,14 @@
 		if (unlikely(!iph))
 			goto out;
 	}
-
+	/* dcPIM change */
+        if(iph->tos & 0x1) {
+                if (unlikely(ip_fast_csum((u8 *)iph, 5)))
+                	goto out;
+		iph->protocol = 0xFE;
+                iph->tos &= ~(1UL);
+		ip_send_check (iph);
+        }
 	proto = iph->protocol;
 
 	ops = rcu_dereference(inet_offloads[proto]);
--- linux-6.0.3/net/ipv4/ip_output.c	2022-10-21 10:39:29.000000000 +0000
+++ linux-6.0.3_qizhe/net/ipv4/ip_output.c	2023-03-15 03:02:12.398612893 +0000
@@ -506,13 +506,23 @@
 	skb_push(skb, sizeof(struct iphdr) + (inet_opt ? inet_opt->opt.optlen : 0));
 	skb_reset_network_header(skb);
 	iph = ip_hdr(skb);
+	/* dcPIM change */
+        if(sk->sk_protocol == 0xFE) {
+                tos = tos | 1;
+        }
 	*((__be16 *)iph) = htons((4 << 12) | (5 << 8) | (tos & 0xff));
 	if (ip_dont_fragment(sk, &rt->dst) && !skb->ignore_df)
 		iph->frag_off = htons(IP_DF);
 	else
 		iph->frag_off = 0;
 	iph->ttl      = ip_select_ttl(inet, &rt->dst);
-	iph->protocol = sk->sk_protocol;
+        /* dcPIM change */
+	if(sk->sk_protocol == 0xFE) {
+                iph->protocol = 6;
+        } else {
+                iph->protocol = sk->sk_protocol;
+        }
+	// iph->protocol = sk->sk_protocol;
 	ip_copy_addrs(iph, fl4);
 
 	/* Transport layer set skb->h.foo itself. */
